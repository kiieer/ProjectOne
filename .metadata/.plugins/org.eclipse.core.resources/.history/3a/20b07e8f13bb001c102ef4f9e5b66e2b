package com.revature.project.one.dao;


import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

import com.revature.project.one.entities.Employee;
import com.revature.project.one.entities.Reimbursement;
import com.revature.project.one.utils.ConnUtil;

public class EmpDAOPostgres implements EmpDAO {
	
	static Connection conn = ConnUtil.getInstance();
	
	@Override
	public Employee login(Employee empObj) {
		// TODO Auto-generated method stub
		Employee localEmp = new Employee();
		try {
			PreparedStatement ptsmt = conn.prepareStatement("select * from employees");
			ResultSet rs = ptsmt.executeQuery();
			String eusername = empObj.getUsername();
			String epass = empObj.getPass();
			
			while(rs.next()) {
				int id = rs.getInt("id");
				String password = rs.getString("pass");
				String username = rs.getString("username");
				String type = rs.getString("emptype");
				if (eusername.equals(username) && epass.equals(password)) {
					localEmp.setId(id);
					localEmp.setUsername(eusername);
					localEmp.setPass(epass);
					localEmp.setType(type);
					break;
				}
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return localEmp;
	}

	@Override
	public List<Employee> getAllEmployees() {
		// TODO Auto-generated method stub
		String selectEmps = "select * from employees";
		ArrayList<Employee> eList = new ArrayList<Employee>();
		Employee e;
		try {
			PreparedStatement ptsmt = conn.prepareStatement(selectEmps);
			ResultSet rs = ptsmt.executeQuery();
			while(rs.next()) {
				int id = rs.getInt("id");
				String password = rs.getString("pass");
				String username = rs.getString("username");
				String type = rs.getString("emptype");
				e = new Employee(id, username, password, type);
				eList.add(e);
			}
			
		} catch (SQLException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		
		return eList;
	}

	@Override
	public List<Reimbursement> getAllReimbursements() {
		// TODO Auto-generated method stub
		String selectReim = "select * from reimbursements";
		ArrayList<Reimbursement> rList = new ArrayList<Reimbursement>();
		Reimbursement r;
		try {
			PreparedStatement ptsmt = conn.prepareStatement(selectReim);
			ResultSet rs = ptsmt.executeQuery();
			while(rs.next()) {
				int id = rs.getInt("id");
				int eid = rs.getInt("emp_id");
				int mid = rs.getInt("man_id");
				String type = rs.getString("type");
				int amount = rs.getInt("amount");
				String desc = rs.getString("description");
				String submittime = rs.getString("submit");
				String resolvetime = rs.getString("resolve_time");
				boolean resolved = rs.getBoolean("resolved");
				boolean accepted = rs.getBoolean("accepted");
				r = new Reimbursement(id, eid, mid, type, amount, desc, submittime, resolvetime, resolved, accepted);
				rList.add(r);
			}
			
		} catch (SQLException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		
		return rList;
	}

	@Override
	public boolean createReimbursement(Reimbursement reimbursement) {
		// TODO Auto-generated method stub
		try {
			PreparedStatement ptsmt = conn.prepareStatement("INSERT into reimbursements values(DEFAULT,?,?,?,?,?,DEFAULT,?,?,?)");
			ptsmt.setInt(2, reimbursement.getEmpId());
			ptsmt.setInt(3, reimbursement.getManId());
			ptsmt.setString(4, reimbursement.getType());
			ptsmt.setInt(5, reimbursement.getAmount());
			ptsmt.setString(6, reimbursement.getDesc());
			ptsmt.setString(8, reimbursement.getResolve());
			ptsmt.setBoolean(9, reimbursement.isResolved());
			ptsmt.setBoolean(10, reimbursement.isAccepted());
			ptsmt.execute();
			return true;
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				return false;
			}
	}
	 
}
